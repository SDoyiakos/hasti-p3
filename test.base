logical a. $ Test types outside method
integer b. $ Test types outside method
void c.    $ Test types outside method

!! Defining a tuple with vardecls in body
tuple Person { 
      integer age.
      logical data.
}.


!! Testing a function with inputs
void main {integer input1, logical value1} [

    !! Testing vardecls
    void voidTest.
    integer intTest.
    logical logTest.
    tuple test1 test2.

    !! Returning exp and empty return    
    return True.
    return "test".
    return (a + b) < c.
    return.
    return a:b.

    !! Testing writes
    write << True.
    write << a & b & c.
    write << 5.
    write << 3 + 2 / 3 * 5. $ Also a test of associativity
    write << 3 + 2 - 3 * 5. $ Another associativity tests    

    !! Testing reads
    read >> start:next.
    read >> location.
    read >> this:is:a:long:location.

    !! Testing a while
    while a < 3 | a == 4 [

    	  !! Testing varDecls
    	  integer val.
	  void val2.
	  logical _veryLogical.

	  !! Testing stmt
	  someVal = 5 + 5.
	  return ~a.
	  return -a.
	  return True & False | someBool.

    ]

    if x>=y & x < 3 [
       !! Testing varDecls  
       integer val.         
       void val2.           
       logical _veryLogical.

       !! Testing stmts
       someNum++.
       someNum--.

    ]

    !! Testing if-else 
    if ~bool [
    
	 !! Testing varDecls   
   	 integer val.          
    	 void val2.            
    	 logical _veryLogical. 

	 !! Testing stmts
	 x = x + 1.
    	 return x >= y + y/2.
    ]
    else [
    	 !! Testing varDecls     
	 integer val.            
	 void val2.              
	 logical _veryLogical.   
	                         
	 !! Testing stmts        
	 x:val = x + 1 - 2 * 3 / 4.              
	 return bool1 | bool2 & ~bool3.    
    ]

]
tuple id1 id2.

